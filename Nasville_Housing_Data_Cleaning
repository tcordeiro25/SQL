/* cleaning data in sql queries */

Select *
From Portfolio.dbo.NashvilleHousing

-- changing the date format

Select SaleDateConverted, CONVERT(Date,SaleDate)
From Portfolio.dbo.NashvilleHousing

Update NashvilleHousing
Set SaleDate = CONVERT(Date,Saledate)

ALTER TABLE NashvilleHousing
Add SaleDateConverted Date;

Update NashvilleHousing
Set SaleDateConverted = CONVERT(Date,Saledate)


-- Populate Property Address Data

Select *
From Portfolio.dbo.NashvilleHousing
order by ParcelID

Select x.ParcelID, x.PropertyAddress, y.ParcelID, y.PropertyAddress, ISNULL(x.PropertyAddress, y.PropertyAddress)
From Portfolio.dbo.NashvilleHousing x
JOIN Portfolio.dbo.NashvilleHousing y
	on x.ParcelID = y.ParcelID
	and x.[UniqueID ] <> y.[UniqueID ]
Where x.PropertyAddress is null

Update x
SET PropertyAddress = ISNULL(x.PropertyAddress, y.PropertyAddress)
From Portfolio.dbo.NashvilleHousing x
JOIN Portfolio.dbo.NashvilleHousing y
	on x.ParcelID = y.ParcelID
	and x.[UniqueID ] <> y.[UniqueID ]
Where x.PropertyAddress is null

-- breaking out address into seperate columns (address, city, state)

Select PropertyAddress
From Portfolio.dbo.NashvilleHousing

Select
SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) as Address -- minus 1 takes away the comma after address
, SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress)) as Address

From Portfolio.dbo.NashvilleHousing

ALTER TABLE NashvilleHousing
Add PropertySplitAddress Nvarchar(255);

Update NashvilleHousing
Set PropertySplitAddress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )

ALTER TABLE NashvilleHousing
Add PropertySplitCity Nvarchar(255);

Update NashvilleHousing
Set PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress))

-- seperating owner address 

Select OwnerAddress
From Portfolio.dbo.NashvilleHousing

Select
PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,3)
,PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,2)
,PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,1)
From Portfolio.dbo.NashvilleHousing



ALTER TABLE NashvilleHousing
Add OwnerSplitAddress Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitAddress = PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,3)

ALTER TABLE NashvilleHousing
Add OwnerSplitCity Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitCity = PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,2)

ALTER TABLE NashvilleHousing
Add OwnerSplitState Nvarchar(255);

Update NashvilleHousing
Set OwnerSplitState = PARSENAME(REPLACE(OwnerAddress, ',' , '.') ,1)

Select *
From Portfolio.dbo.NashvilleHousing



-- changing Y and N to Yes and No in SoldAsVacant column

Select Distinct(SoldAsVacant), Count(SoldAsVacant)
From Portfolio.dbo.NashvilleHousing
Group by SoldAsVacant
Order by 2


Select SoldAsVacant
,CASE	WHEN SoldAsVacant = 'Y' THEN 'Yes'
		WHEN SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
END
From Portfolio.dbo.NashvilleHousing

Update NashvilleHousing
Set SoldAsVacant = CASE	WHEN SoldAsVacant = 'Y' THEN 'Yes'
		WHEN SoldAsVacant = 'N' THEN 'No'
		ELSE SoldAsVacant
END


-- removing duplicates

WITH RowNumCTE AS(
Select *,
	Row_Number() Over(
	PARTITION BY ParcelID,
	             PropertyAddress,
				 SalePrice,
				 SaleDate,
				 LegalReference
				 Order By
					UniqueID
					) row_num

From Portfolio.dbo.NashvilleHousing
)

DELETE
From RowNumCTE
Where row_num > 1


-- deleting unused columns

Select *
From Portfolio.dbo.NashvilleHousing

ALTER TABLE Portfolio.dbo.NashvilleHousing
DROP COLUMN OwnerAddress, PropertyAddress, TaxDistrict
